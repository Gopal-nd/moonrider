/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as ReportsRouteImport } from './routes/reports'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as ProductsRouteImport } from './routes/products'
import { Route as OrdersRouteImport } from './routes/orders'
import { Route as NotificationsRouteImport } from './routes/notifications'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as CustomersRouteImport } from './routes/customers'
import { Route as AuthenticatedRouteImport } from './routes/_authenticated'
import { Route as IndexRouteImport } from './routes/index'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const ReportsRoute = ReportsRouteImport.update({
  id: '/reports',
  path: '/reports',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsRoute = ProductsRouteImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => rootRouteImport,
} as any)
const OrdersRoute = OrdersRouteImport.update({
  id: '/orders',
  path: '/orders',
  getParentRoute: () => rootRouteImport,
} as any)
const NotificationsRoute = NotificationsRouteImport.update({
  id: '/notifications',
  path: '/notifications',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const CustomersRoute = CustomersRouteImport.update({
  id: '/customers',
  path: '/customers',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedRoute = AuthenticatedRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/customers': typeof CustomersRoute
  '/dashboard': typeof DashboardRoute
  '/notifications': typeof NotificationsRoute
  '/orders': typeof OrdersRoute
  '/products': typeof ProductsRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/customers': typeof CustomersRoute
  '/dashboard': typeof DashboardRoute
  '/notifications': typeof NotificationsRoute
  '/orders': typeof OrdersRoute
  '/products': typeof ProductsRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_authenticated': typeof AuthenticatedRoute
  '/customers': typeof CustomersRoute
  '/dashboard': typeof DashboardRoute
  '/notifications': typeof NotificationsRoute
  '/orders': typeof OrdersRoute
  '/products': typeof ProductsRoute
  '/profile': typeof ProfileRoute
  '/reports': typeof ReportsRoute
  '/settings': typeof SettingsRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/customers'
    | '/dashboard'
    | '/notifications'
    | '/orders'
    | '/products'
    | '/profile'
    | '/reports'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/customers'
    | '/dashboard'
    | '/notifications'
    | '/orders'
    | '/products'
    | '/profile'
    | '/reports'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/_authenticated'
    | '/customers'
    | '/dashboard'
    | '/notifications'
    | '/orders'
    | '/products'
    | '/profile'
    | '/reports'
    | '/settings'
    | '/sign-in'
    | '/sign-up'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthenticatedRoute: typeof AuthenticatedRoute
  CustomersRoute: typeof CustomersRoute
  DashboardRoute: typeof DashboardRoute
  NotificationsRoute: typeof NotificationsRoute
  OrdersRoute: typeof OrdersRoute
  ProductsRoute: typeof ProductsRoute
  ProfileRoute: typeof ProfileRoute
  ReportsRoute: typeof ReportsRoute
  SettingsRoute: typeof SettingsRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/reports': {
      id: '/reports'
      path: '/reports'
      fullPath: '/reports'
      preLoaderRoute: typeof ReportsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products': {
      id: '/products'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/orders': {
      id: '/orders'
      path: '/orders'
      fullPath: '/orders'
      preLoaderRoute: typeof OrdersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/notifications': {
      id: '/notifications'
      path: '/notifications'
      fullPath: '/notifications'
      preLoaderRoute: typeof NotificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/customers': {
      id: '/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof CustomersRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthenticatedRoute: AuthenticatedRoute,
  CustomersRoute: CustomersRoute,
  DashboardRoute: DashboardRoute,
  NotificationsRoute: NotificationsRoute,
  OrdersRoute: OrdersRoute,
  ProductsRoute: ProductsRoute,
  ProfileRoute: ProfileRoute,
  ReportsRoute: ReportsRoute,
  SettingsRoute: SettingsRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
